<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--says that we can define spring beans dependencies without actually having to specify a bunch of beans in xml
    or implement an interface or extend a base class or anything. For example, just by annotating a class with
    @Controller (as we did above) , spring will know that the specified class contains methods that will handle HTTP requests,
    no need to define that as a bean in xml.-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!--responsebody返回处理-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:default-servlet-handler />

    <!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->
    <context:component-scan base-package="com.paper.management.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan base-package="com.paper.management.service">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <import resource="classpath:spring/spring-config.xml"/>
</beans>